%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Matlab Tutorial for 3D Anthropometry
%
% Wonsup Lee (mcury83@gmail.com)
% 19 Feb 2016
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

clear; % delete all variables
close all; % close all figures

%% data loading
dir = 'source 3D images';
filename = 'face_W.ply';
filename_3D_scan = fullfile(dir, filename);
[ListVertex, ListFace, ListFace_backup, HEADER] = function_loading_ply_file(filename_3D_scan);

filename = 'face_W_landmark.asc';
filename_landmark = fullfile(dir, filename);
landmark = textread(filename_landmark, '');


%% landmark identification
% NOTE. Before run this code, the face should be roughly rotated to align
% with X Y Z axis (Y-up). The face should faced to +Z direction
visualization = 0; % 1 = Yes || 0 = No
landmark = function_landmark_identification(ListFace, ListVertex, landmark, visualization);

%% alignment
% The face will be aligned using two virtual axis.
% (1) A virtual axis generated by sellion(2) and supramentale(18) will be aligned to Y-axis.
% (2) A virtual axis generated by left and right zygion(12, 13) will be aligned to X-axis.

visualization = 0;
source.point1 = table2array(landmark(2, :));
source.point2 = table2array(landmark(18, :));
source.point3 = table2array(landmark(12, :));
source.point4 = table2array(landmark(13, :));
[ListVertex, landmark] = function_alignment(source, ListFace, ListVertex, landmark, visualization);
    
% change [0, 0, 0] point (sellion will be the orogin point.)
origin = landmark(2, :);
landmark{:, 1} = landmark{:, 1} - origin{1, 1};
landmark{:, 2} = landmark{:, 2} - origin{1, 2};
landmark{:, 3} = landmark{:, 3} - origin{1, 3};

save('DB_face_W_landmark.mat', 'landmark');
%%% [ADD] save PLY here %%%

%% facial measurement

% length dimensions (Euclidean distance)
subject_name = 'S1';
visualization = 0; % 1 = Yes || 0 = No
measurements = function_measurement(ListFace, ListVertex, landmark, subject_name, visualization);
%%% [ADD] add more dimensions to measure in function_measurement %%%


% arc, circumference dimensions